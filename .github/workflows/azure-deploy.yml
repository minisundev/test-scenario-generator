name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FRONTEND_WEBAPP_NAME: dopaminesun-web-app
  BACKEND_WEBAPP_NAME: dopaminesun-proxy-server
  REGISTRY_LOGIN_SERVER: dopaminesun.azurecr.io
  COMPOSE_PROJECT_NAME: frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker images
        run: |
          COMPOSE_PROJECT_NAME=${{ env.COMPOSE_PROJECT_NAME }} docker-compose -f docker-compose.yml build --no-cache
    
      - name: Show Docker images
        run: docker images

      - name: Tag and push images to ACR
        run: |
          # 실제 생성된 이미지명을 동적으로 찾기
          FRONTEND_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep frontend | head -1)
          PROXY_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep proxy-server | head -1)
          
          echo "Found frontend image: $FRONTEND_IMAGE"
          echo "Found proxy-server image: $PROXY_IMAGE"
          
          # 이미지가 존재하는지 확인
          if [ -z "$FRONTEND_IMAGE" ]; then
            echo "Error: Frontend image not found"
            exit 1
          fi
          
          if [ -z "$PROXY_IMAGE" ]; then
            echo "Error: Proxy-server image not found"
            exit 1
          fi
          
          # 태그 및 푸시
          docker tag $FRONTEND_IMAGE ${{ env.REGISTRY_LOGIN_SERVER }}/frontend:latest
          docker tag $PROXY_IMAGE ${{ env.REGISTRY_LOGIN_SERVER }}/proxy-server:latest
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/frontend:latest
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/proxy-server:latest

      - name: Deploy frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.FRONTEND_WEBAPP_NAME }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/frontend:latest

      - name: Deploy backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_NAME }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/proxy-server:latest